name: PHP CI

on:
  - push
  - pull_request

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: ['8.3']

    services:
      db:
        image: postgres:16.9
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 #Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up PHP ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: xdebug

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..30}; do
            pg_isready -h db -p 5432 && break
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: PHP Security Checker
        uses: StephaneBour/actions-php-security-checker@1.1

      - name: Setup project
        run: make setup

      - name: Check lint
        run: make lint

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: make test-coverage

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   if: ${{ github.event_name == 'push' }}

  #   steps:
  #     - uses: actions/checkout@v4

  #     - uses: docker/setup-buildx-action@v3

  #     - uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         push: true
  #         cache-from: behindthep/task-manager:latest
  #         cache-to: type=inline
  #         tags: behindthep/task-manager:latest
