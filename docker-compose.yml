version: '3.8'

services:

  app:
    build:
      args:
        user: tmanager
        uid: 1000
        gid: 1000
      context: .
      dockerfile: Dockerfile
    image: tmanager
    container_name: tmanager-app
    working_dir: /app
    volumes:
      - ./:/app:delegated
      - "/tmp:/tmp:delegated"
    depends_on:
      - db
    environment:
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_DATABASE: postgres
      DB_USERNAME: postgres
      PORT: 8000
    ports:
      - "8000:8000"
    command: ["make", "start"]
    networks:
      - initial

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app:delegated
    ports:
      - "3000:3000"
    command: ["make", "start-frontend"]
    networks:
      - initial

  db:
    image: postgres:16.9-alpine
    container_name: tmanager-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password # заменить на реальный пароль
      POSTGRES_DB: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - initial
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:

networks:
  initial:
